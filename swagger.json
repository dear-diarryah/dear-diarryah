{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Dear Diarryah - API Documentation",
    "description": "API Documentation for Dear Diarryah"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/signUp": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Create a new user account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Successful registration" },
          "500": { "description": "Error registering new user" }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string" },
                "password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Successful login" },
          "401": { "description": "Invalid credentials" },
          "404": { "description": "No user found" },
          "500": { "description": "Error on the server" }
        }
      }
    },
    "/admin/getUsers": {
      "get": {
        "tags": ["Admin"],
        "summary": "Retrieve all users",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "List of users" },
          "403": { "description": "Access forbidden, you are not an admin" },
          "500": { "description": "Error fetching users" }
        }
      }
    },
    "/admin/updateUsername/:userId": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Update a user's username",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the user to update"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newUsername": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Username updated successfully" },
          "403": { "description": "Access forbidden, you are not an admin" },
          "500": { "description": "Error updating username" }
        }
      }
    },
    "/admin/updatePassword/:userId": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Update a user's password",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the user whose password is to be updated"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newPassword": { "type": "string" }
              }
            }
          }
        ],
        "responses": {      "200": { "description": "Password updated successfully" },
        "403": { "description": "Access forbidden, you are not an admin" },
        "500": { "description": "Error updating password" }
      }
    }
  },
  "/admin/deleteUser/:userId": {
    "delete": {
      "tags": ["Admin"],
      "summary": "Delete a user",
      "parameters": [
        {
          "name": "x-access-token",
          "in": "header",
          "required": true,
          "type": "string"
        },
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "ID of the user to delete"
        }
      ],
      "responses": {
        "200": { "description": "User and their entries deleted successfully" },
        "403": { "description": "Access forbidden, you are not an admin" },
        "404": { "description": "User not found or not authorized" },
        "500": { "description": "Error deleting user" }
      }
    }
  },
  "/getEntries": {
    "get": {
      "tags": ["Diary Entries"],
      "summary": "Get all diary entries for a user",
      "parameters": [
        {
          "name": "x-access-token",
          "in": "header",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": { "description": "Successful response" },
        "500": { "description": "Error on the server" }
      }
    }
  },
  "/getEntry/:entryId": {
    "get": {
      "tags": ["Diary Entries"],
      "summary": "Get a specific diary entry",
      "parameters": [
        {
          "name": "x-access-token",
          "in": "header",
          "required": true,
          "type": "string"
        },
        {
          "name": "entryId",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "ID of the diary entry to retrieve"
        }
      ],
      "responses": {
        "200": { "description": "Diary entry retrieved successfully" },
        "500": { "description": "Error on the server" }
      }
    }
  },
  "/postEntry": {
    "post": {
      "tags": ["Diary Entries"],
      "summary": "Create a new diary entry",
      "parameters": [
        {
          "name": "x-access-token",
          "in": "header",
          "required": true,
          "type": "string"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "The title of the diary entry"
              },
              "date": {
                "type": "string",
                "description": "The date of the diary entry (format: YYYY-MM-DD)"
              },
              "city": {
                "type": "string",
                "description": "The city associated with the diary entry"
              },
              "content": {
                "type": "string",
                "description": "The content of the diary entry"
              },
              "weather": {
                "type": "string",
                "description": "The weather information for the specified date and city"
              }
            }
          }
        }
      ],
      "responses": {
        "200": { "description": "Entry posted successfully" },
        "500": { "description": "Error posting entry" }
      }
    }
  },
  "/editEntry/:entryId": {
    "put": {
      "tags": ["Diary Entries"],
      "summary": "Edit an existing diary entry",
      "parameters": [
        {
          "name": "x-access-token",
          "in": "header",
          "required": true,
          "type": "string"
        },
        {
          "name": "entryId",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "ID of the diary entry to edit"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "title": { "type": "string" },
              "date": { "type": "string" },
              "city": { "type": "string" },
              "content": { "type": "string" }
            }
          }
        }
      ], 
      "responses": {
        "200": { "description": "Entry edited successfully" },
        "404": { "description": "Entry not found or not authorized" },
        "500": { "description": "Error editing entry" }
      }
    }
  },
  "/deleteEntry": {
    "delete": {
      "tags": ["Diary Entries"],
      "summary": "Delete a diary entry",
      "parameters": [
        {
          "name": "x-access-token",
          "in": "header",
          "required": true,
          "type": "string"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "entryId": { "type": "integer" }
            }
          }
        }
      ],
      "responses": {
        "200": { "description": "Entry deleted successfully" },
        "404": { "description": "Entry not found or not authorized" },
        "500": { "description": "Error deleting entry" }
      }
    }
  },
  "/updateProfile": {
    "post": {
      "tags": ["Profile"],
      "summary": "Update or create a user profile",
      "parameters": [
        {
          "name": "x-access-token",
          "in": "header",
          "required": true,
          "type": "string"
        },
        {
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "nickname": { "type": "string" },
              "biography": { "type": "string" },
              "age": { "type": "integer" },
              "rabies_date": { "type": "string" },
              "tetanus_date": { "type": "string" },
              "borreliose_date": { "type": "string" },
              "gender": { "type": "string" }
            }
          }
        }
      ],
      "responses": {
        "200": { "description": "Profile updated or created successfully" },
        "500": { "description": "Error on the server" }
      }
    }
  },
  "/getProfile": {
    "get": {
      "tags": ["Profile"],
      "summary": "Get the user profile",
      "parameters": [
        {
          "name": "x-access-token",
          "in": "header",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": { "description": "Profile retrieved successfully" },
        "500": { "description": "Error fetching profile" }
      }
    }
  },
  "/api/fact": {
    "get": {
      "tags": ["External APIs"],
      "summary": "Fetch a random dog fact",
      "responses": {
        "200": { "description": "Dog fact retrieved" },
        "500": { "description": "Error fetching fact data" }
      }
    }
  },
  "/api/getTomTomApiKey": {
    "get": {
      "tags": ["External APIs"],
      "summary": "Retrieve the API key for TomTom services",
      "responses": {
        "200": { "description": "API key provided" }
      }
    }
  },
  "/api/veterinarians": {
    "get": {
      "tags": ["External APIs"],
      "summary": "Search for veterinarians in a specific area",
      "responses": {
        "200": { "description": "List of veterinarians retrieved" },
        "500": { "description": "Error fetching data from TomTom API" }
      }
    }
  }
}
}